@import "./../../styles/index";

$paddingTopBottom: 0.2rem;
$paddingLeftRight: 0.5rem;
$reducer: 30;

.badge {
  border-radius: 0.35rem !important;
  font-family: $fuiFontFamily;
  font-weight: $fuiFontWeightMedium;
  padding: $paddingTopBottom $paddingLeftRight;
  width: fit-content;

  display: flex !important;
  align-items: flex-end;
  gap: 4px;
}

.rounded {
  border-radius: 50rem !important;
}

.fuiColorGhostFill {
  fill: var(--fuiColorGhost, $fuiColorGhost);
}

.fuiColorDisabledFill {
  fill: var(--fuiColorDisabledText, $fuiColorDisabledText);
}

.primary {
  @include fuiBadge(
    var(--fuiBtnPrimary, $fuiBtnPrimary),
    var(--fuiColorGhost, $fuiColorGhost)
  );
}
.success {
  @include fuiBadge(var(--fuiBtnSuccess, $fuiBtnSuccess), #000);
}
.warning {
  @include fuiBadge(var(--fuiBtnWarning, $fuiBtnWarning), #000);
}

.danger {
  @include fuiBadge(
    var(--fuiBtnDanger, $fuiBtnDanger),
    var(--fuiColorGhost, $fuiColorGhost)
  );
}
.accent {
  @include fuiBadge(var(--fuiBtnAccent, $fuiBtnAccent), #000);
}

.text {
  @include fuiBadge(
    var(--fuiColorLightShade, $fuiColorLightShade),
    var( #000, #000)
  );
}

.ghost {
  border-width: 1px;
  border-color: var(--fuiColorMediumShade, $fuiColorMediumShade);
  border-style: solid;
  @include fuiBadge(transparent, var(--fuiColorFullShade, $fuiColorFullShade));
}

.disabled {
  @include fuiBadge(
    var(--fuiBtnDisabled, $fuiBtnDisabled),
    var(--fuiColorDisabledText, $fuiColorDisabledText)
  );
  cursor: not-allowed;
}

.sizedefault {
  @include reduceSize($fuiFontSize, $reducer);
  @include biggerPadding($fuiFontSize, $paddingTopBottom, $paddingLeftRight);
}
.sizexs {
  @include reduceSize($fuiFontSizeXS, $reducer);
  @include biggerPadding($fuiFontSizeXS, $paddingTopBottom, $paddingLeftRight);
}
.sizes {
  @include reduceSize($fuiFontSizeS, $reducer);
  @include biggerPadding($fuiFontSizeS, $paddingTopBottom, $paddingLeftRight);
}
.sizem {
  @include reduceSize($fuiFontSizeM, $reducer);
  @include biggerPadding($fuiFontSizeM, $paddingTopBottom, $paddingLeftRight);
}

.sizel {
  @include reduceSize($fuiFontSizeL, $reducer);
  @include biggerPadding($fuiFontSizeL, $paddingTopBottom, $paddingLeftRight);
}

.sizexl {
  @include reduceSize($fuiFontSizeXL, $reducer);
  @include biggerPadding($fuiFontSizeXL, $paddingTopBottom, $paddingLeftRight);
}

.sizexxl {
  @include reduceSize($fuiFontSizeXXL, $reducer);
  @include biggerPadding($fuiFontSizeXXL, $paddingTopBottom, $paddingLeftRight);
}

.badge-icon {
  display: flex;
  align-items: center;
  justify-content: center;
}

.sizedefault-badge-icon {
  ::ng-deep div {
    @include reduceSize($fuiFontSize, $reducer);
  }
}

.sizexs-badge-icon {
  ::ng-deep div {
    @include reduceSize($fuiFontSizeXS, $reducer);
  }
}

.sizes-badge-icon {
  ::ng-deep div {
    @include reduceSize($fuiFontSizeS, $reducer);
  }
}

.sizem-badge-icon {
  ::ng-deep div {
    @include reduceSize($fuiFontSizeM, $reducer);
  }
}

.sizel-badge-icon {
  ::ng-deep div {
    @include reduceSize($fuiFontSizeL, $reducer);
  }
}

.sizexl-badge-icon {
  ::ng-deep div {
    @include reduceSize($fuiFontSizeXL, $reducer);
  }
}

.sizexxl-badge-icon {
  ::ng-deep div {
    @include reduceSize($fuiFontSizeXXL, $reducer);
  }
}

.d-none {
  display: none !important;
}

.underline {
  .body-text {
    text-decoration: underline;
  }
}

.dismissLeft {
  flex-direction: row;
}

.dismissRight {
  flex-direction: row-reverse;
}
