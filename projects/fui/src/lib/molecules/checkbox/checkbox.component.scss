@use "./../../styles/variables/color_variable" as color;
@use "./../../styles/variables/typography_variable" as typography;
@use "./../../styles/variables/border_variable" as border;

.checkbox {
  display: flex;
  align-items: flex-start;
  width: fit-content;
}

.with-group-label {
  gap: .5rem;
}

.flex-row {
  flex-direction: row;
}

.flex-column {
  flex-direction: column;
}

.checkbox-options {
  display: flex;
  gap: .5rem;
  flex-direction: column;

  .option {
    display: flex;
    align-items: center;
    gap: .5rem;
  }
}

.option-item {
  display: flex;
  gap: 1rem;
}

.option-align-row {
  flex-direction: row;
}

.option-align-column {
  flex-direction: column;
}

.option,
input, 
label {
  cursor: pointer;
}

$color-styles: (
  primary: color.$fuiColorPrimary,
  accent: color.$fuiColorAccent,
  success: color.$fuiColorSuccess,
  warning: color.$fuiColorWarning,
  danger: color.$fuiColorDanger,
  text: color.$fuiColorDarkShade,
  disabled: color.$fuiColorDisabled,
);

@each $color, $value in $color-styles {
  .checkbox-#{$color} {    
    input[type="checkbox"]{
      appearance: none;
      accent-color: $value;
      border: 2px solid color.$fuiColorMediumShade;
      border-radius: border.$fuiBorderRadiusSmall;

      &:hover {
        border: 2px solid $value;
      }

      &:checked {
        background-color: $value;
        border: 2px solid $value;
        position: relative;

        &::after {
          content: 'âœ”';
          position: absolute;
          width: 100%;
          height: 100%;
          color: color.$fuiColorGhost;
        }
      }

      &:indeterminate {
        background-color: $value;
        border: 2px solid $value;
        position: relative;

        &::after {
          content: '';
          position: absolute;
          width: 100%;
          height: 100%;
          scale: .5;
          background-color: color.$fuiColorGhost;
        }
      }
    }
  }
}

$size-style: (
  sizedefault: typography.$fuiFontSize,
  sizexs: typography.$fuiFontSizeXS,
  sizes: typography.$fuiFontSizeS,
  sizem: typography.$fuiFontSizeM,
  sizel: typography.$fuiFontSizeL,
  sizexl: typography.$fuiFontSizeXL,
  sizexxl: typography.$fuiFontSizeXXL,
);

@each $size, $value in $size-style {
  .checkbox-#{$size} {
    input[type="checkbox"] {
      width: $value;
      height: $value;

      &:checked::after {
        font-size: calc($value - 4px);
        @if $size == 'sizedefault' {
          transform: translateX(1px);          
        } @else if $size == 'sizexs' {
          transform: translateX(1px);
        } @else if $size == 'sizes' {
          transform: translateX(1px);
        } @else if $size == 'sizem' {
          transform: translateX(2px); 
        } @else if $size == 'sizel' {
          transform: translateX(2px);
        } @else if $size == 'sizexl' {
          transform: translateX(2px);
        } @else if $size == 'sizexxl' {
          transform: translateX(3px);
        }
      }
    }
  }
}

.checkbox-disabled,
.checkbox-disabled input,
.checkbox-disabled label {
  cursor: not-allowed;
}